package ru.practicum.explorewithme.service;

import ru.practicum.explorewithme.EndpointStatisticsDto;
import ru.practicum.explorewithme.HitDto;

import java.util.List;

/**
 * Интерфейс-сервис HitService определяет контракт,
 * включающий сигнатуры ряда методов, которые реализуют
 * расширяющие его классы слоя бизнес-логики
 * в части работы с информацией о запросах к главному микросервису
 * приложения ExploreWithMe.
 */
public interface HitService {
    /**
     * Валидирует и перенаправляет объект типа HitDto в слой доступа к данным (добавления объекта),
     * а также преобразует возвращаемый из хранилища объект
     * типа Hit в HitDto.
     *
     * @param hitDto (объект арендуемой вещи, содержащий информацию о ней,
     *                которую необходимо занести в хранилище)
     *
     * @return HitDto
     */
    HitDto postHit(HitDto hitDto);

    /**
     * Включает маршрутизацию в слой доступа к данным
     * (метод извлечения из хранилища всех объектов со статистической информацией по результатам поиска).
     *
     * @param start (момент времени, с которого следует осуществлять поиск статистки
     *              по сохраненной информации о запросах)
     * @param end (момент времени, по который следует осуществлять поиск статистки
     *              по сохраненной информации о запросах)
     * @param uris (список префиксов эндпоинтов, по которым необходимо собрать статистически данные)
     * @param unique (флаг уникальности запроса от конкретного пользователя:
     *               true - рассматриваем только уникальные запросы, false - все запросы)
     *
     * @return List<EndpointStatisticsDto> (список объектов со статистической информацией о запросах
     * к эндпоинтам uris в период с момента start до момента end)
     */
    List<EndpointStatisticsDto> getStatistics(String start, String end, List<String> uris, Boolean unique);
}
